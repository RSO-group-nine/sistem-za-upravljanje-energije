#########################################################
# GPT service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: { { .Values.gpt.name } }
  namespace: { { .Values.namespace } }
  labels:
    name: { { .Values.gpt.name } }
    app: { { .Values.app } }
spec:
  selector:
    matchLabels:
      app: { { .Values.gpt.appLabel } }
  replicas: { { .Values.gpt.replicas } }
  template:
    metadata:
      labels:
        app: { { .Values.gpt.appLabel } }
    spec:
      containers:
        - name: { { .Values.gpt.containerName } }
          image: { { .Values.gpt.image } }
          imagePullPolicy: { { .Values.imagePullPolicy } }
          envFrom:
            - configMapRef:
                name: { { .Values.gpt.configMapName } }
            - secretRef:
                name: { { .Values.gpt.secretName } }
          env:
            - name: SERVICES
              value: { { .Values.gpt.serviceName } }
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
            - name: secret-volume
              mountPath: /etc/secret
              readOnly: true
          resources:
            limits:
              cpu: { { .Values.gpt.resources.limits.cpu } }
              memory: { { .Values.gpt.resources.limits.memory } }
            requests:
              cpu: { { .Values.gpt.resources.requests.cpu } }
              memory: { { .Values.gpt.resources.requests.memory } }
      volumes:
        - name: config-volume
          configMap:
            name: { { .Values.users.configMapName } }
        - name: secret-volume
          secret:
            secretName: { { .Values.users.secretName } }
