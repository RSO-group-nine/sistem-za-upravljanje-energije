services:
  api:
    build:
      context: .
    image: zigac24/sistem-za-upravljanje-energije-molecular:molecular_v1
    env_file: .env
    environment:
      SERVICES: api # Moleculer Runner will start only the 'api' service in this container
    depends_on:
      - nats
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-gw.rule=PathPrefix(`/`)"
      - "traefik.http.services.api-gw.loadbalancer.server.port=3000"
    networks:
      - internal

  device:
    build:
      context: .
    image: zigac24/sistem-za-upravljanje-energije-molecular:molecular_v1
    env_file: .env
    environment:
      SERVICES: device
    depends_on:
      - nats
    networks:
      - internal

  gpt:
    build:
      context: .
    image: zigac24/sistem-za-upravljanje-energije-molecular:molecular_v1
    env_file: .env
    environment:
      SERVICES: gpt
    depends_on:
      - nats
    networks:
      - internal

  openapi:
    build:
      context: .
    image: zigac24/sistem-za-upravljanje-energije-molecular:molecular_v1
    env_file: .env
    environment:
      SERVICES: openapi
    depends_on:
      - nats
    networks:
      - internal

  users:
    build:
      context: .
    image: zigac24/sistem-za-upravljanje-energije-molecular:molecular_v1
    env_file: .env
    environment:
      SERVICES: users
    depends_on:
      - nats
    networks:
      - internal

  greeter:
    build:
      context: .
    image: zigac24/sistem-za-upravljanje-energije-molecular:molecular_v1
    env_file: .env
    environment:
      SERVICES: greeter # Moleculer Runner will start only the 'greeter' service in this container
    depends_on:
      - nats
    networks:
      - internal

  products:
    build:
      context: .
    image: zigac24/sistem-za-upravljanje-energije-molecular:molecular_v1
    env_file: .env
    environment:
      SERVICES: products # Moleculer Runner will start only the 'products' service in this container
    depends_on:
      - nats
    networks:
      - internal

  nats:
    image: nats:2
    networks:
      - internal

  traefik:
    image: traefik:v2.1
    command:
      - "--api.insecure=true" # Don't do that in production!
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    ports:
      - 3000:80
      - 3001:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - internal
      - default

networks:
  internal:
    driver: bridge
