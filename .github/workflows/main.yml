name: CI/CD Pipeline to Deploy to DigitalOcean Kubernetes

on:
  push:
    branches:
      - main # Trigger the pipeline on pushes to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # Cache Docker layers to speed up builds
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Create .env file
      - name: Create .env file
        run: |
          echo "PORT=${{ secrets.PORT }}" >> backend/.env
          echo "API_VERSION=${{ secrets.API_VERSION }}" >> backend/.env
          echo "API_KEY=${{ secrets.API_KEY }}" >> backend/.env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> backend/.env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> backend/.env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> backend/.env
          echo "DB_USER=${{ secrets.DB_USER }}" >> backend/.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> backend/.env
          echo "POSTGRES_URI=${{ secrets.POSTGRES_URI }}" >> backend/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> backend/.env
          echo "IOT_HUB_CONNECTION_STRING=${{ secrets.IOT_HUB_CONNECTION_STRING }}" >> backend/.env

      # Run Docker Compose to build and push the images
      - name: Build and push Docker images with npm scripts
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          cd backend
          npm install
          npm run dc:down
          npm run dc:up
          npm run dc:push
